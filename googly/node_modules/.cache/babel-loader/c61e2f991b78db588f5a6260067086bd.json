{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wendy/Desktop/School/CMPUT-401/Googly-Word-Game/googly/src/Control.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { controlOptions } from \"./Atom\";\nexport const Control = ({\n  onClear\n}) => {\n  _s();\n\n  const [controlState, setControlState] = useRecoilState(controlOptions);\n  const {\n    isRunning,\n    speed\n  } = controlState;\n\n  const togglePause = () => {\n    setControlState(oldState => {\n      return { ...oldState,\n        isRunning: !oldState.isRunning\n      };\n    });\n  };\n\n  const onStart = useCallback(() => {\n    setControlState({ ...controlState,\n      isRunning: true\n    });\n  }, [controlState, setControlState]);\n  const onChangeSpeed = useCallback(event => {\n    setControlState({ ...controlState,\n      speed: event.target.value\n    });\n  }, [setControlState, controlState]);\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", () => {\n      setControlState(oldState => {\n        return { ...oldState,\n          isRunning: false\n        };\n      });\n    });\n    return () => document.removeEventListener(\"visibilitychange\");\n  }, [setControlState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control__buttons\",\n      children: [isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePause,\n        children: \"PAUSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStart,\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClear,\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control__speed\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Current speed: ${speed}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"10\",\n        value: speed,\n        onChange: onChangeSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Control, \"loSjPTzgfjlAPHzbAuPn04glY4g=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Control;\nexport default _c2 = /*#__PURE__*/React.memo(Control);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Control\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/wendy/Desktop/School/CMPUT-401/Googly-Word-Game/googly/src/Control.js"],"names":["React","useEffect","useCallback","useRecoilState","controlOptions","Control","onClear","controlState","setControlState","isRunning","speed","togglePause","oldState","onStart","onChangeSpeed","event","target","value","document","addEventListener","removeEventListener","memo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,cAAc,CAACC,cAAD,CAAtD;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBH,YAA7B;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBH,IAAAA,eAAe,CAAEI,QAAD,IAAc;AAC5B,aAAO,EAAE,GAAGA,QAAL;AAAeH,QAAAA,SAAS,EAAE,CAACG,QAAQ,CAACH;AAApC,OAAP;AACD,KAFc,CAAf;AAGD,GAJD;;AAMA,QAAMI,OAAO,GAAGX,WAAW,CAAC,MAAM;AAChCM,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmBE,MAAAA,SAAS,EAAE;AAA9B,KAAD,CAAf;AACD,GAF0B,EAExB,CAACF,YAAD,EAAeC,eAAf,CAFwB,CAA3B;AAIA,QAAMM,aAAa,GAAGZ,WAAW,CAC9Ba,KAAD,IAAW;AACTP,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmBG,MAAAA,KAAK,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAAvC,KAAD,CAAf;AACD,GAH8B,EAI/B,CAACT,eAAD,EAAkBD,YAAlB,CAJ+B,CAAjC;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAClDX,MAAAA,eAAe,CAAEI,QAAD,IAAc;AAC5B,eAAO,EAAE,GAAGA,QAAL;AAAeH,UAAAA,SAAS,EAAE;AAA1B,SAAP;AACD,OAFc,CAAf;AAGD,KAJD;AAKA,WAAO,MAAMS,QAAQ,CAACE,mBAAT,CAA6B,kBAA7B,CAAb;AACD,GAPQ,EAON,CAACZ,eAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGC,SAAS,gBACR;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAGR;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAME;AAAQ,QAAA,OAAO,EAAEP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA,kBAAK,kBAAiBI,KAAM;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,IAHN;AAIE,QAAA,KAAK,EAAEA,KAJT;AAKE,QAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApDM;;GAAMT,O;UAC6BF,c;;;KAD7BE,O;AAsDb,kCAAeL,KAAK,CAACqB,IAAN,CAAWhB,OAAX,CAAf","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { useRecoilState } from \"recoil\";\n\nimport { controlOptions } from \"./Atom\";\n\nexport const Control = ({ onClear }) => {\n  const [controlState, setControlState] = useRecoilState(controlOptions);\n  const { isRunning, speed } = controlState;\n\n  const togglePause = () => {\n    setControlState((oldState) => {\n      return { ...oldState, isRunning: !oldState.isRunning };\n    });\n  };\n\n  const onStart = useCallback(() => {\n    setControlState({ ...controlState, isRunning: true });\n  }, [controlState, setControlState]);\n\n  const onChangeSpeed = useCallback(\n    (event) => {\n      setControlState({ ...controlState, speed: event.target.value });\n    },\n    [setControlState, controlState]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", () => {\n      setControlState((oldState) => {\n        return { ...oldState, isRunning: false };\n      });\n    });\n    return () => document.removeEventListener(\"visibilitychange\");\n  }, [setControlState]);\n\n  return (\n    <div className=\"control\">\n      <div className=\"control__buttons\">\n        {isRunning ? (\n          <button onClick={togglePause}>PAUSE</button>\n        ) : (\n          <button onClick={onStart}>START</button>\n        )}\n        <button onClick={onClear}>CLEAR</button>\n      </div>\n      <div className=\"control__speed\">\n        <p>{`Current speed: ${speed}`}</p>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"10\"\n          value={speed}\n          onChange={onChangeSpeed}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Control);\n"]},"metadata":{},"sourceType":"module"}