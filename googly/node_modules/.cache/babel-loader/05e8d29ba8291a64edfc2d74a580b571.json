{"ast":null,"code":"import { useState, useMemo } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isClient } from './util';\nvar defaultState = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\n\nvar useMeasure = function () {\n  var _a = useState(null),\n      element = _a[0],\n      ref = _a[1];\n\n  var _b = useState(defaultState),\n      rect = _b[0],\n      setRect = _b[1];\n\n  var observer = useMemo(function () {\n    return new window.ResizeObserver(function (entries) {\n      if (entries[0]) {\n        var _a = entries[0].contentRect,\n            x = _a.x,\n            y = _a.y,\n            width = _a.width,\n            height = _a.height,\n            top_1 = _a.top,\n            left = _a.left,\n            bottom = _a.bottom,\n            right = _a.right;\n        setRect({\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          top: top_1,\n          left: left,\n          bottom: bottom,\n          right: right\n        });\n      }\n    });\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    if (!element) return;\n    observer.observe(element);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element]);\n  return [ref, rect];\n};\n\nvar useMeasureMock = function () {\n  return [function () {}, defaultState];\n};\n\nexport default isClient && !!window.ResizeObserver ? useMeasure : useMeasureMock;","map":{"version":3,"sources":["C:/Users/Owner/Documents/GitHub/Googly-Word-Game/googly/node_modules/react-use/esm/useMeasure.js"],"names":["useState","useMemo","useIsomorphicLayoutEffect","isClient","defaultState","x","y","width","height","top","left","bottom","right","useMeasure","_a","element","ref","_b","rect","setRect","observer","window","ResizeObserver","entries","contentRect","top_1","observe","disconnect","useMeasureMock"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,CAAC,EAAE,CADY;AAEfC,EAAAA,CAAC,EAAE,CAFY;AAGfC,EAAAA,KAAK,EAAE,CAHQ;AAIfC,EAAAA,MAAM,EAAE,CAJO;AAKfC,EAAAA,GAAG,EAAE,CALU;AAMfC,EAAAA,IAAI,EAAE,CANS;AAOfC,EAAAA,MAAM,EAAE,CAPO;AAQfC,EAAAA,KAAK,EAAE;AARQ,CAAnB;;AAUA,IAAIC,UAAU,GAAG,YAAY;AACzB,MAAIC,EAAE,GAAGd,QAAQ,CAAC,IAAD,CAAjB;AAAA,MAAyBe,OAAO,GAAGD,EAAE,CAAC,CAAD,CAArC;AAAA,MAA0CE,GAAG,GAAGF,EAAE,CAAC,CAAD,CAAlD;;AACA,MAAIG,EAAE,GAAGjB,QAAQ,CAACI,YAAD,CAAjB;AAAA,MAAiCc,IAAI,GAAGD,EAAE,CAAC,CAAD,CAA1C;AAAA,MAA+CE,OAAO,GAAGF,EAAE,CAAC,CAAD,CAA3D;;AACA,MAAIG,QAAQ,GAAGnB,OAAO,CAAC,YAAY;AAC/B,WAAO,IAAIoB,MAAM,CAACC,cAAX,CAA0B,UAAUC,OAAV,EAAmB;AAChD,UAAIA,OAAO,CAAC,CAAD,CAAX,EAAgB;AACZ,YAAIT,EAAE,GAAGS,OAAO,CAAC,CAAD,CAAP,CAAWC,WAApB;AAAA,YAAiCnB,CAAC,GAAGS,EAAE,CAACT,CAAxC;AAAA,YAA2CC,CAAC,GAAGQ,EAAE,CAACR,CAAlD;AAAA,YAAqDC,KAAK,GAAGO,EAAE,CAACP,KAAhE;AAAA,YAAuEC,MAAM,GAAGM,EAAE,CAACN,MAAnF;AAAA,YAA2FiB,KAAK,GAAGX,EAAE,CAACL,GAAtG;AAAA,YAA2GC,IAAI,GAAGI,EAAE,CAACJ,IAArH;AAAA,YAA2HC,MAAM,GAAGG,EAAE,CAACH,MAAvI;AAAA,YAA+IC,KAAK,GAAGE,EAAE,CAACF,KAA1J;AACAO,QAAAA,OAAO,CAAC;AAAEd,UAAAA,CAAC,EAAEA,CAAL;AAAQC,UAAAA,CAAC,EAAEA,CAAX;AAAcC,UAAAA,KAAK,EAAEA,KAArB;AAA4BC,UAAAA,MAAM,EAAEA,MAApC;AAA4CC,UAAAA,GAAG,EAAEgB,KAAjD;AAAwDf,UAAAA,IAAI,EAAEA,IAA9D;AAAoEC,UAAAA,MAAM,EAAEA,MAA5E;AAAoFC,UAAAA,KAAK,EAAEA;AAA3F,SAAD,CAAP;AACH;AACJ,KALM,CAAP;AAMH,GAPqB,EAOnB,EAPmB,CAAtB;AAQAV,EAAAA,yBAAyB,CAAC,YAAY;AAClC,QAAI,CAACa,OAAL,EACI;AACJK,IAAAA,QAAQ,CAACM,OAAT,CAAiBX,OAAjB;AACA,WAAO,YAAY;AACfK,MAAAA,QAAQ,CAACO,UAAT;AACH,KAFD;AAGH,GAPwB,EAOtB,CAACZ,OAAD,CAPsB,CAAzB;AAQA,SAAO,CAACC,GAAD,EAAME,IAAN,CAAP;AACH,CApBD;;AAqBA,IAAIU,cAAc,GAAG,YAAY;AAAE,SAAO,CAAC,YAAY,CAAG,CAAhB,EAAkBxB,YAAlB,CAAP;AAAyC,CAA5E;;AACA,eAAeD,QAAQ,IAAI,CAAC,CAACkB,MAAM,CAACC,cAArB,GAAsCT,UAAtC,GAAmDe,cAAlE","sourcesContent":["import { useState, useMemo } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isClient } from './util';\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nvar useMeasure = function () {\n    var _a = useState(null), element = _a[0], ref = _a[1];\n    var _b = useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n};\nvar useMeasureMock = function () { return [function () { }, defaultState]; };\nexport default isClient && !!window.ResizeObserver ? useMeasure : useMeasureMock;\n"]},"metadata":{},"sourceType":"module"}