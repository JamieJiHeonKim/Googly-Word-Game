{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const LoadData = () => {\n  _s();\n\n  const [word, setWord] = useState({\n    word: {}\n  });\n  useEffect(() => {\n    const fetchWord = async () => {\n      const response = await fetch(\"https://random-words-with-pronunciation.p.rapidapi.com/word\", {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\n          \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\"\n        }\n      });\n      const data = await response.json();\n      setWord(data.results[0]);\n    };\n\n    fetchWord();\n  }, []);\n  return React.Children.map(children, child => React.cloneElement(child, {\n    word\n  }));\n};\n\n_s(LoadData, \"qgXu0TiVOF+kQBoT+5DRpLDaHb4=\");\n\n_c = LoadData;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadData\");","map":{"version":3,"sources":["C:/Users/Owner/Documents/GitHub/Googly-Word-Game/googly/src/LoadData.js"],"names":["useState","useEffect","LoadData","word","setWord","fetchWord","response","fetch","method","headers","data","json","results","React","Children","map","children","child","cloneElement"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6DAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,4BACE,oDAFK;AAGP,6BAAmB;AAHZ;AAFX,OAF0B,CAA5B;AAWA,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,MAAAA,OAAO,CAACM,IAAI,CAACE,OAAL,CAAa,CAAb,CAAD,CAAP;AACD,KAdD;;AAeAP,IAAAA,SAAS;AACV,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,SAAOQ,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBC,QAAnB,EAA8BC,KAAD,IAClCJ,KAAK,CAACK,YAAN,CAAmBD,KAAnB,EAA0B;AAAEd,IAAAA;AAAF,GAA1B,CADK,CAAP;AAGD,CAvBM;;GAAMD,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from \"react\";\r\nexport const LoadData = () => {\r\n  const [word, setWord] = useState({ word: {} });\r\n  useEffect(() => {\r\n    const fetchWord = async () => {\r\n      const response = await fetch(\r\n        \"https://random-words-with-pronunciation.p.rapidapi.com/word\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-key\":\r\n              \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\r\n            \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setWord(data.results[0]);\r\n    };\r\n    fetchWord();\r\n  }, []);\r\n  return React.Children.map(children, (child) =>\r\n    React.cloneElement(child, { word })\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}