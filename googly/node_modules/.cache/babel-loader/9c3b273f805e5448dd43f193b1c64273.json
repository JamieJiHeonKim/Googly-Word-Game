{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { isClient } from './util';\n\nvar noop = function () {};\n\nvar useLocalStorage = function (key, initialValue, options) {\n  if (!isClient) {\n    return [initialValue, noop, noop];\n  }\n\n  if (!key) {\n    throw new Error('useLocalStorage key may not be falsy');\n  }\n\n  var deserializer = options ? options.raw ? function (value) {\n    return value;\n  } : options.deserializer : JSON.parse; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var _a = useState(function () {\n    try {\n      var serializer = options ? options.raw ? String : options.serializer : JSON.stringify;\n      var localStorageValue = localStorage.getItem(key);\n\n      if (localStorageValue !== null) {\n        return deserializer(localStorageValue);\n      } else {\n        initialValue && localStorage.setItem(key, serializer(initialValue));\n        return initialValue;\n      }\n    } catch (_a) {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue;\n    }\n  }),\n      state = _a[0],\n      setState = _a[1]; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n  var set = useCallback(function (valOrFunc) {\n    try {\n      var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\n      if (typeof newState === 'undefined') return;\n      var value = void 0;\n      if (options) {\n        if (options.raw) {\n          if (typeof newState === 'string') value = newState;else value = JSON.stringify(newState);\n        } else if (options.serializer) value = options.serializer(newState);else value = JSON.stringify(newState);\n      } else value = JSON.stringify(newState);\n      localStorage.setItem(key, value);\n      setState(deserializer(value));\n    } catch (_a) {// If user is in private mode or has storage restriction\n      // localStorage can throw. Also JSON.stringify can throw.\n    }\n  }, [key, setState]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var remove = useCallback(function () {\n    try {\n      localStorage.removeItem(key);\n      setState(undefined);\n    } catch (_a) {// If user is in private mode or has storage restriction\n      // localStorage can throw.\n    }\n  }, [key, setState]);\n  return [state, set, remove];\n};\n\nexport default useLocalStorage;","map":{"version":3,"sources":["C:/Users/Jon/Documents/GitHub/Googly-Word-Game/googly/node_modules/react-use/esm/useLocalStorage.js"],"names":["useState","useCallback","isClient","noop","useLocalStorage","key","initialValue","options","Error","deserializer","raw","value","JSON","parse","_a","serializer","String","stringify","localStorageValue","localStorage","getItem","setItem","state","setState","set","valOrFunc","newState","remove","removeItem","undefined"],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { isClient } from './util';\r\nvar noop = function () { };\r\nvar useLocalStorage = function (key, initialValue, options) {\r\n    if (!isClient) {\r\n        return [initialValue, noop, noop];\r\n    }\r\n    if (!key) {\r\n        throw new Error('useLocalStorage key may not be falsy');\r\n    }\r\n    var deserializer = options ? (options.raw ? function (value) { return value; } : options.deserializer) : JSON.parse;\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    var _a = useState(function () {\r\n        try {\r\n            var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\r\n            var localStorageValue = localStorage.getItem(key);\r\n            if (localStorageValue !== null) {\r\n                return deserializer(localStorageValue);\r\n            }\r\n            else {\r\n                initialValue && localStorage.setItem(key, serializer(initialValue));\r\n                return initialValue;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // If user is in private mode or has storage restriction\r\n            // localStorage can throw. JSON.parse and JSON.stringify\r\n            // can throw, too.\r\n            return initialValue;\r\n        }\r\n    }), state = _a[0], setState = _a[1];\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    var set = useCallback(function (valOrFunc) {\r\n        try {\r\n            var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\r\n            if (typeof newState === 'undefined')\r\n                return;\r\n            var value = void 0;\r\n            if (options)\r\n                if (options.raw)\r\n                    if (typeof newState === 'string')\r\n                        value = newState;\r\n                    else\r\n                        value = JSON.stringify(newState);\r\n                else if (options.serializer)\r\n                    value = options.serializer(newState);\r\n                else\r\n                    value = JSON.stringify(newState);\r\n            else\r\n                value = JSON.stringify(newState);\r\n            localStorage.setItem(key, value);\r\n            setState(deserializer(value));\r\n        }\r\n        catch (_a) {\r\n            // If user is in private mode or has storage restriction\r\n            // localStorage can throw. Also JSON.stringify can throw.\r\n        }\r\n    }, [key, setState]);\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    var remove = useCallback(function () {\r\n        try {\r\n            localStorage.removeItem(key);\r\n            setState(undefined);\r\n        }\r\n        catch (_a) {\r\n            // If user is in private mode or has storage restriction\r\n            // localStorage can throw.\r\n        }\r\n    }, [key, setState]);\r\n    return [state, set, remove];\r\n};\r\nexport default useLocalStorage;\r\n"]},"metadata":{},"sourceType":"module"}