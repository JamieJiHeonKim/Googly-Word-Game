{"ast":null,"code":"// import React, {useEffect, useCallback} from 'react'\n// import { useRecoilState } from 'recoil';\n// import { controlOptions } from './atom';\n// export const Control = ({ onClear }) => {\n//     const [controlState, setControlState] = useRecoilState(controlOptions);\n//     const {isRunning, speed} = controlState;\n//     const togglePause = () => {\n//         setControlState(oldState => {\n//             return {...oldState, isRunning: !oldState.isRunning};\n//         });\n//     }\n//     const onStart = useCallback(() => {\n//         setControlState({...controlState, isRunning: true});\n//     }, \n//     [\n//         controlState,\n//         setControlState,\n//     ]);\n//     const onChangeSpeed = useCallback((event) => {\n//         setControlState({...controlState, speed: event.target.value});\n//     }, [setControlState, controlState]);\n//     useEffect(() => {\n//         document.addEventListener(\"visibilitychange\", () => {\n//             setControlState(oldState => {\n//                 return {...oldState, isRunning: false};\n//             });\n//         });\n//         return () => document.removeEventListener(\"visibilitychange\");         \n//     }, [setControlState]);\n//     return (\n//         <div className=\"control\">\n//             <div className=\"control__buttons\">\n//                 {\n//                     isRunning ? \n//                         (\n//                             <button onClick={togglePause}>\n//                                 PAUSE\n//                             </button>\n//                         ) : (\n//                             <button onClick={onStart}>\n//                                 START\n//                             </button>\n//                         )                        \n//                 }\n//                 <button onClick={onClear}>CLEAR</button>\n//             </div>\n//             <div className=\"control__speed\">\n//                 <p>{`Current speed: ${speed}`}</p>\n//                 <input\n//                     type=\"range\"\n//                     min=\"1\"\n//                     max=\"10\"\n//                     value={speed}\n//                     onChange={onChangeSpeed}\n//                 />\n//             </div>\n//         </div>\n//     )\n// }\n// export default React.memo(Control);","map":{"version":3,"sources":["/Users/wendy/Desktop/School/CMPUT-401/Googly-Word-Game/googly/src/Control.js"],"names":[],"mappings":"AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\n// import React, {useEffect, useCallback} from 'react'\n// import { useRecoilState } from 'recoil';\n\n// import { controlOptions } from './atom';\n\n// export const Control = ({ onClear }) => {\n//     const [controlState, setControlState] = useRecoilState(controlOptions);\n//     const {isRunning, speed} = controlState;\n\n//     const togglePause = () => {\n//         setControlState(oldState => {\n//             return {...oldState, isRunning: !oldState.isRunning};\n//         });\n//     }\n\n//     const onStart = useCallback(() => {\n//         setControlState({...controlState, isRunning: true});\n//     }, \n//     [\n//         controlState,\n//         setControlState,\n//     ]);\n\n//     const onChangeSpeed = useCallback((event) => {\n//         setControlState({...controlState, speed: event.target.value});\n//     }, [setControlState, controlState]);\n\n\n//     useEffect(() => {\n//         document.addEventListener(\"visibilitychange\", () => {\n//             setControlState(oldState => {\n//                 return {...oldState, isRunning: false};\n//             });\n//         });\n//         return () => document.removeEventListener(\"visibilitychange\");         \n//     }, [setControlState]);\n\n//     return (\n//         <div className=\"control\">\n//             <div className=\"control__buttons\">\n//                 {\n//                     isRunning ? \n//                         (\n//                             <button onClick={togglePause}>\n//                                 PAUSE\n//                             </button>\n//                         ) : (\n//                             <button onClick={onStart}>\n//                                 START\n//                             </button>\n//                         )                        \n//                 }\n//                 <button onClick={onClear}>CLEAR</button>\n//             </div>\n//             <div className=\"control__speed\">\n//                 <p>{`Current speed: ${speed}`}</p>\n//                 <input\n//                     type=\"range\"\n//                     min=\"1\"\n//                     max=\"10\"\n//                     value={speed}\n//                     onChange={onChangeSpeed}\n//                 />\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default React.memo(Control);\n\n"]},"metadata":{},"sourceType":"module"}