{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\GitHub\\\\Googly-Word-Game\\\\googly\\\\src\\\\PlayGame.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { WordList } from \"./WordList\";\n\nclass PlayGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://random-words-with-pronunciation.p.rapidapi.com/word\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\n        \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\"\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        words: json\n      });\n    }).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  render() {\n    var {\n      isLoaded,\n      words\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playGame\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [words.map(words => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Word: \", words.word, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), \"Definition: \", words.definition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(WordList, {\n            value: words[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default PlayGame;","map":{"version":3,"sources":["C:/Users/Owner/Documents/GitHub/Googly-Word-Game/googly/src/PlayGame.js"],"names":["React","Component","WordList","PlayGame","constructor","props","state","words","isLoaded","componentDidMount","fetch","method","headers","then","res","json","setState","response","console","log","catch","err","error","render","map","word","definition"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6DAAD,EAAgE;AACnEC,MAAAA,MAAM,EAAE,KAD2D;AAEnEC,MAAAA,OAAO,EAAE;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAF0D,KAAhE,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSE,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAEQ;AAFK,OAAd;AAID,KAbH,EAcGF,IAdH,CAcSI,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAhBH,EAiBGG,KAjBH,CAiBUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,KAnBH;AAoBD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEf,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAsB,KAAKD,KAA/B;;AAEA,QAAI,CAACE,QAAL,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAA,qBACGD,KAAK,CAACiB,GAAN,CAAWjB,KAAD,iBACT;AAAA,iCACSA,KAAK,CAACkB,IADf,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,kBAGelB,KAAK,CAACmB,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CADH,eAQE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEnB,KAAK,CAAC,CAAD;AAAtB;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAcD;AACF;;AArD8B;;AAwDjC,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { WordList } from \"./WordList\";\r\n\r\nclass PlayGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://random-words-with-pronunciation.p.rapidapi.com/word\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\r\n        \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          words: json,\r\n        });\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    var { isLoaded, words } = this.state;\r\n\r\n    if (!isLoaded) {\r\n      return <div>Loading Word</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"playGame\">\r\n          <ul>\r\n            {words.map((words) => (\r\n              <li>\r\n                Word: {words.word}\r\n                <br></br>\r\n                Definition: {words.definition}\r\n              </li>\r\n            ))}\r\n            <WordList value={words[0]} />\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default PlayGame;\r\n"]},"metadata":{},"sourceType":"module"}