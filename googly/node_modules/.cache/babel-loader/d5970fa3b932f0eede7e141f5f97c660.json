{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction hex2rgba(hex) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var newhex = hex.replace('#', '');\n  var r = parseInt(newhex.substring(0, 2), 16);\n  var g = parseInt(newhex.substring(2, 4), 16);\n  var b = parseInt(newhex.substring(4, 6), 16);\n  var result = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + opacity / 100 + ')';\n  return result;\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"/* add css styles here (optional) */\\n\\n.styles_wrapper__3KXDn {\\n  display: block;\\n  font-family: sans-serif;\\n  text-align: center;\\n  margin: 0 auto;\\n  position: relative;\\n}\\n\\n.styles_scoreWrapper__2ELf- {\\n  width: 100%;\\n}\\n\\n.styles_rangeSvg__1TDxQ .styles_pathEl__j7uKd {\\n    opacity: 0.3;\\n}\\n\\n.styles_rangeSvg__1TDxQ .styles_pathEl--active__1aVpT {\\n  opacity: 1;\\n}\\n\\n.styles_scoreValue__2dBgK {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  width: 75%;\\n  max-width: 75%;\\n  margin: 0 auto;\\n  text-shadow: 0px 1px 1px #bfbfbf;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.styles_scoreValue__2dBgK .styles_value__2Y4_G {}\\n\\n.styles_scoreValue__2dBgK .styles_separator__1X7r0 {\\n  padding: 0 4px;\\n}\\n\\n.styles_scoreValue__2dBgK .styles_maxValue__3RXTR {}\\n\";\nvar styles = {\n  \"wrapper\": \"styles_wrapper__3KXDn\",\n  \"scoreWrapper\": \"styles_scoreWrapper__2ELf-\",\n  \"rangeSvg\": \"styles_rangeSvg__1TDxQ\",\n  \"pathEl\": \"styles_pathEl__j7uKd\",\n  \"pathEl--active\": \"styles_pathEl--active__1aVpT\",\n  \"scoreValue\": \"styles_scoreValue__2dBgK\",\n  \"value\": \"styles_value__2Y4_G\",\n  \"separator\": \"styles_separator__1X7r0\",\n  \"maxValue\": \"styles_maxValue__3RXTR\"\n};\nstyleInject(css);\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Score = function (_React$Component) {\n  inherits(Score, _React$Component);\n\n  function Score() {\n    classCallCheck(this, Score);\n\n    var _this = possibleConstructorReturn(this, (Score.__proto__ || Object.getPrototypeOf(Score)).call(this));\n\n    _this.canvas = React.createRef();\n    _this.ctx = null;\n    _this.devicePixelRatio = null;\n    return _this;\n  }\n\n  createClass(Score, [{\n    key: 'draw',\n    value: function draw(ctx) {\n      if (!ctx || !this.devicePixelRatio) return;\n      var _props = this.props,\n          width = _props.width,\n          maxAngle = _props.maxAngle,\n          rotation = _props.rotation,\n          stepsColors = _props.stepsColors,\n          lineGap = _props.lineGap,\n          lineWidth = _props.lineWidth,\n          scoreNumber = _props.scoreNumber,\n          fadedOpacity = _props.fadedOpacity; // change size canvas when HDPI screen\n\n      var pixelRatio = this.devicePixelRatio;\n      var wRatio = width * pixelRatio;\n      this.canvas.current.width = wRatio;\n      this.canvas.current.height = wRatio;\n      var halfWidth = wRatio / 2;\n      var pieSize = maxAngle / stepsColors.length;\n      var lastval = 0;\n      ctx.clearRect(halfWidth * -1, halfWidth * -1, wRatio, wRatio);\n      ctx.resetTransform();\n      ctx.translate(wRatio / 2, wRatio / 2);\n      ctx.rotate(Math.PI * 2 * ((rotation + (360 - maxAngle - lineGap) / 2) / 360));\n\n      for (var i = 0; i < stepsColors.length; i++) {\n        ctx.beginPath();\n        ctx.arc(0, 0, halfWidth - lineWidth * pixelRatio / 2, Math.PI * 2 * ((lastval + lineGap) / 360), Math.PI * 2 * ((lastval + pieSize) / 360));\n        lastval += pieSize;\n        if (scoreNumber < i + 1) ctx.strokeStyle = hex2rgba(stepsColors[i], fadedOpacity);else ctx.strokeStyle = stepsColors[i];\n        ctx.lineWidth = lineWidth * pixelRatio;\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.devicePixelRatio = window.devicePixelRatio;\n      this.ctx = this.canvas.current.getContext('2d');\n      this.draw(this.ctx);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var width = this.props.width;\n      this.draw(this.ctx);\n      return React.createElement('canvas', {\n        className: styles.rangeSvg,\n        ref: this.canvas,\n        style: {\n          width: width\n        },\n        width: width,\n        height: width\n      });\n    }\n  }]);\n  return Score;\n}(React.Component);\n\nScore.propTypes = {\n  scoreNumber: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  lineWidth: PropTypes.number,\n  lineGap: PropTypes.number,\n  maxAngle: PropTypes.number,\n  rotation: PropTypes.number,\n  stepsColors: PropTypes.array.isRequired,\n  fadedOpacity: PropTypes.number\n};\nScore.defaultProps = {\n  width: 200,\n  lineWidth: 5,\n  lineGap: 5,\n  maxAngle: 260,\n  rotation: 90,\n  fadedOpacity: 40\n};\n\nvar Score$1 = function (_React$PureComponent) {\n  inherits(Score$$1, _React$PureComponent);\n\n  function Score$$1() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Score$$1);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Score$$1.__proto__ || Object.getPrototypeOf(Score$$1)).call.apply(_ref, [this].concat(args))), _this), _this.getCurrentColor = function (num) {\n      var stepsColors = _this.props.stepsColors;\n      if (num <= 0) return stepsColors[0];\n      if (num > stepsColors.length) return stepsColors[stepsColors.length - 1];\n      return stepsColors[num - 1];\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(Score$$1, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          value = _props.value,\n          maxValue = _props.maxValue,\n          width = _props.width,\n          stepsColors = _props.stepsColors,\n          textStyle = _props.textStyle;\n      var stepRange = maxValue / stepsColors.length;\n      var numberHighlight = Math.ceil(value / stepRange);\n      var valueSize = 36 * width / 200;\n      var maxValueSize = 20 * width / 200;\n      var scoreValuePosition = 25 * width / 200;\n      return React.createElement('div', {\n        className: styles.scoreWrapper\n      }, React.createElement(Score, _extends({\n        scoreNumber: Number(numberHighlight)\n      }, this.props)), React.createElement('div', {\n        className: styles.scoreValue,\n        style: _extends({\n          bottom: scoreValuePosition,\n          color: this.getCurrentColor(numberHighlight)\n        }, textStyle)\n      }, React.createElement('span', {\n        className: styles.value,\n        style: {\n          fontSize: valueSize\n        }\n      }, value), React.createElement('span', {\n        className: styles.separator,\n        style: {\n          fontSize: maxValueSize\n        }\n      }, '/'), React.createElement('span', {\n        className: styles.maxValue,\n        style: {\n          fontSize: maxValueSize\n        }\n      }, maxValue)));\n    }\n  }]);\n  return Score$$1;\n}(React.PureComponent);\n\nScore$1.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  maxValue: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  stepsColors: PropTypes.array.isRequired,\n  textStyle: PropTypes.object\n};\nScore$1.defaultProps = {\n  textStyle: {}\n};\nvar DEFAULT_STEP_COLORS = ['#d12000', '#ed8d00', '#f1bc00', '#84c42b', '#53b83a', '#3da940', '#3da940', '#3da940'];\n\nfunction ReactScoreIndicator(props) {\n  var width = props.width,\n      style = props.style;\n  return React.createElement('div', {\n    className: styles.wrapper,\n    style: _extends({\n      width: width + 'px'\n    }, style)\n  }, React.createElement(Score$1, props));\n}\n\nReactScoreIndicator.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  maxValue: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  lineWidth: PropTypes.number,\n  lineSpacing: PropTypes.number,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  maxAngle: PropTypes.number,\n  rotation: PropTypes.number,\n  stepsColors: PropTypes.array,\n  fadedOpacity: PropTypes.number\n};\nReactScoreIndicator.defaultProps = {\n  width: 200,\n  maxAngle: 260,\n  lineWidth: 5,\n  lineSpacing: 5,\n  rotation: 90,\n  stepsColors: DEFAULT_STEP_COLORS,\n  style: {},\n  textStyle: {},\n  fadedOpacity: 40\n};\nexport default ReactScoreIndicator;","map":{"version":3,"sources":["../src/utils/hex2rgba.js","../node_modules/style-inject/dist/style-inject.es.js","../src/components/Range.js","../src/components/Score.js","../src/index.js"],"names":["opacity","newhex","hex","r","parseInt","g","b","result","Score","React","Component","propTypes","PropTypes","number","defaultProps","ctx","width","maxAngle","rotation","stepsColors","lineGap","lineWidth","scoreNumber","fadedOpacity","pixelRatio","wRatio","halfWidth","pieSize","lastval","Math","i","hex2rgba","window","styles","PureComponent","object","getCurrentColor","num","value","maxValue","textStyle","stepRange","numberHighlight","valueSize","maxValueSize","scoreValuePosition","Number","fontSize","DEFAULT_STEP_COLORS","style","props","ReactScoreIndicator"],"mappings":"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","sourcesContent":["export default function hex2rgba (hex, opacity = 1) {\n  const newhex = hex.replace('#', '');\n  const r = parseInt(newhex.substring(0, 2), 16);\n  const g = parseInt(newhex.substring(2, 4), 16);\n  const b = parseInt(newhex.substring(4, 6), 16);\n\n  const result = `rgba(${r}, ${g}, ${b}, ${opacity / 100})`;\n  return result;\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport hex2rgba from '../utils/hex2rgba';\nimport styles from '../styles.css';\n\nexport default class Score extends React.Component {\n  static propTypes = {\n    scoreNumber: PropTypes.number.isRequired,\n    width: PropTypes.number,\n    lineWidth: PropTypes.number,\n    lineGap: PropTypes.number,\n    maxAngle: PropTypes.number,\n    rotation: PropTypes.number,\n    stepsColors: PropTypes.array.isRequired,\n    fadedOpacity: PropTypes.number,\n  };\n\n  static defaultProps = {\n    width: 200,\n    lineWidth: 5,\n    lineGap: 5,\n    maxAngle: 260,\n    rotation: 90,\n    fadedOpacity: 40,\n  };\n\n  constructor() {\n    super();\n    this.canvas = React.createRef();\n    this.ctx = null;\n    this.devicePixelRatio = null;\n  }\n\n  draw(ctx) {\n    if (!ctx || !this.devicePixelRatio) return;\n    const {\n      width,\n      maxAngle,\n      rotation,\n      stepsColors,\n      lineGap,\n      lineWidth,\n      scoreNumber,\n      fadedOpacity,\n    } = this.props;\n\n    // change size canvas when HDPI screen\n    const pixelRatio = this.devicePixelRatio;\n    const wRatio = width * pixelRatio;\n    this.canvas.current.width = wRatio;\n    this.canvas.current.height = wRatio;\n\n    const halfWidth = wRatio / 2;\n    const pieSize = maxAngle / stepsColors.length;\n    let lastval = 0;\n\n    ctx.clearRect(halfWidth * -1, halfWidth * -1, wRatio, wRatio);\n    ctx.resetTransform();\n\n    ctx.translate(wRatio / 2, wRatio / 2);\n    ctx.rotate(Math.PI * 2 * ((rotation + (360 - maxAngle - lineGap) / 2) / 360));\n\n    for (let i = 0; i < stepsColors.length; i++) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        halfWidth - lineWidth * pixelRatio / 2,\n        Math.PI * 2 * ((lastval + lineGap) / 360),\n        Math.PI * 2 * ((lastval + pieSize) / 360),\n      );\n      lastval += pieSize;\n      if (scoreNumber < i + 1) ctx.strokeStyle = hex2rgba(stepsColors[i], fadedOpacity);\n      else ctx.strokeStyle = stepsColors[i];\n      ctx.lineWidth = lineWidth * pixelRatio;\n      ctx.stroke();\n    }\n  }\n\n  componentDidMount() {\n    this.devicePixelRatio = window.devicePixelRatio;\n    this.ctx = this.canvas.current.getContext('2d');\n\n    this.draw(this.ctx);\n  }\n\n  render() {\n    const { width } = this.props;\n\n    this.draw(this.ctx);\n\n    return (\n      <canvas\n        className={styles.rangeSvg}\n        ref={this.canvas}\n        style={{ width }}\n        width={width}\n        height={width}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Range from './Range';\n\nimport styles from '../styles.css';\n\nexport default class Score extends React.PureComponent {\n  static propTypes = {\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    maxValue: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    stepsColors: PropTypes.array.isRequired,\n    textStyle: PropTypes.object,\n  };\n\n  static defaultProps = {\n    textStyle: {},\n  };\n\n  getCurrentColor = (num) => {\n    const { stepsColors } = this.props;\n\n    if (num <= 0) return stepsColors[0];\n    if (num > stepsColors.length) return stepsColors[stepsColors.length - 1];\n\n    return stepsColors[num - 1];\n  };\n\n  render() {\n    const {\n      value,\n      maxValue,\n      width,\n      stepsColors,\n      textStyle,\n    } = this.props;\n\n    const stepRange = maxValue / stepsColors.length;\n    const numberHighlight = Math.ceil(value / stepRange);\n\n    const valueSize = (36 * width) / 200;\n    const maxValueSize = (20 * width) / 200;\n    const scoreValuePosition = (25 * width) / 200;\n\n    return (\n      <div className={styles.scoreWrapper}>\n        <Range scoreNumber={Number(numberHighlight)} {...this.props} />\n        <div\n          className={styles.scoreValue}\n          style={{\n            bottom: scoreValuePosition,\n            color: this.getCurrentColor(numberHighlight),\n            ...textStyle,\n          }}\n        >\n          <span className={styles.value} style={{ fontSize: valueSize }}>\n            {value}\n          </span>\n          <span className={styles.separator} style={{ fontSize: maxValueSize }}>\n            /\n          </span>\n          <span className={styles.maxValue} style={{ fontSize: maxValueSize }}>\n            {maxValue}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// components\nimport Score from './components/Score';\n\nimport styles from './styles.css';\n\nconst DEFAULT_STEP_COLORS = [\n  '#d12000',\n  '#ed8d00',\n  '#f1bc00',\n  '#84c42b',\n  '#53b83a',\n  '#3da940',\n  '#3da940',\n  '#3da940',\n];\n\nexport default function ReactScoreIndicator(props) {\n  const { width, style } = props;\n\n  return (\n    <div className={styles.wrapper} style={{ width: `${width}px`, ...style }}>\n      <Score {...props} />\n    </div>\n  );\n}\n\nReactScoreIndicator.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  maxValue: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  lineWidth: PropTypes.number,\n  lineSpacing: PropTypes.number,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  maxAngle: PropTypes.number,\n  rotation: PropTypes.number,\n  stepsColors: PropTypes.array,\n  fadedOpacity: PropTypes.number,\n};\n\nReactScoreIndicator.defaultProps = {\n  width: 200,\n  maxAngle: 260,\n  lineWidth: 5,\n  lineSpacing: 5,\n  rotation: 90,\n  stepsColors: DEFAULT_STEP_COLORS,\n  style: {},\n  textStyle: {},\n  fadedOpacity: 40,\n};\n"]},"metadata":{},"sourceType":"module"}