{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jon\\\\Documents\\\\GitHub\\\\Googly-Word-Game\\\\googly\\\\src\\\\Score.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactStoreIndicator from \"react-score-indicator\";\nimport { Button, ScoreFont } from \"./Style\";\nimport { ConfettiAnimation } from \"./Confetti\";\nexport const Score = ({\n  change\n}) => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [recycle, setRecycle] = useState(false);\n  useEffect(() => {\n    if (count === 9 | count === 19 | count === 29 | count === 39 | count === 49 | count === 59 | count === 69) {\n      setRecycle(true);\n    } else {\n      setRecycle(false);\n    } // if (input.toLowerCase() === correct.toLowerCase()) {\n    //   setCount(count + 5);\n    // }\n\n\n    if (change) {\n      setCount(change);\n    }\n  }, [change]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ConfettiAnimation, {\n      run: true,\n      recycle: recycle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreFont, {\n      children: \"Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactStoreIndicator, {\n      value: count,\n      maxValue: 100,\n      lineWidth: 15,\n      lineGap: 3,\n      fadedOpacity: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Score, \"d7FGsuEBplWOXv5qNo1xtCyhj84=\");\n\n_c = Score;\n\nvar _c;\n\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"sources":["C:/Users/Jon/Documents/GitHub/Googly-Word-Game/googly/src/Score.js"],"names":["React","useState","useEffect","ReactStoreIndicator","Button","ScoreFont","ConfettiAnimation","Score","change","count","setCount","recycle","setRecycle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,SAAlC;AAEA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QACGO,KAAK,KAAK,CAAX,GACCA,KAAK,KAAK,EADX,GAECA,KAAK,KAAK,EAFX,GAGCA,KAAK,KAAK,EAHX,GAICA,KAAK,KAAK,EAJX,GAKCA,KAAK,KAAK,EALX,GAMCA,KAAK,KAAK,EAPb,EAQE;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAVD,MAUO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAba,CAcd;AACA;AACA;;;AACA,QAAIJ,MAAJ,EAAY;AACVE,MAAAA,QAAQ,CAACF,MAAD,CAAR;AACD;AACF,GApBQ,EAoBN,CAACA,MAAD,CApBM,CAAT;AAsBA,sBACE;AAAA,4BACE,QAAC,iBAAD;AAAmB,MAAA,GAAG,EAAE,IAAxB;AAA8B,MAAA,OAAO,EAAEG;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,mBAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,QAAQ,EAAE,GAFZ;AAGE,MAAA,SAAS,EAAE,EAHb;AAIE,MAAA,OAAO,EAAE,CAJX;AAKE,MAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAcD,CAxCM;;GAAMF,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactStoreIndicator from \"react-score-indicator\";\r\nimport { Button, ScoreFont } from \"./Style\";\r\n\r\nimport { ConfettiAnimation } from \"./Confetti\";\r\n\r\nexport const Score = ({ change }) => {\r\n  const [count, setCount] = useState(0);\r\n  const [recycle, setRecycle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (count === 9) |\r\n      (count === 19) |\r\n      (count === 29) |\r\n      (count === 39) |\r\n      (count === 49) |\r\n      (count === 59) |\r\n      (count === 69)\r\n    ) {\r\n      setRecycle(true);\r\n    } else {\r\n      setRecycle(false);\r\n    }\r\n    // if (input.toLowerCase() === correct.toLowerCase()) {\r\n    //   setCount(count + 5);\r\n    // }\r\n    if (change) {\r\n      setCount(change);\r\n    }\r\n  }, [change]);\r\n\r\n  return (\r\n    <>\r\n      <ConfettiAnimation run={true} recycle={recycle} />\r\n\r\n      <ScoreFont>Score</ScoreFont>\r\n      <ReactStoreIndicator\r\n        value={count}\r\n        maxValue={100}\r\n        lineWidth={15}\r\n        lineGap={3}\r\n        fadedOpacity={20}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}