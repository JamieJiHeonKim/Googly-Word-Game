{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mashi\\\\Desktop\\\\Jamie\\\\Personal Projects\\\\Googly Word Game\\\\Googly-Word-Game\\\\googly\\\\src\\\\PlayGame.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { WordList } from \"./WordList\";\n\nclass PlayGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://random-words-with-pronunciation.p.rapidapi.com/word\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\n        \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\"\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        words: json\n      });\n    }).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  render() {\n    var {\n      isLoaded,\n      words\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading data from Wordnik API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playGame\",\n        children: [\"All data has been loaded\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: words.map(words => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Word: \", words.word, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), \"Definition: \", words.definition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default PlayGame;","map":{"version":3,"sources":["C:/Users/mashi/Desktop/Jamie/Personal Projects/Googly Word Game/Googly-Word-Game/googly/src/PlayGame.js"],"names":["React","Component","WordList","PlayGame","constructor","props","state","words","isLoaded","componentDidMount","fetch","then","res","json","setState","response","console","log","catch","err","error","render","map","word","definition"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,SAAV,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,6DAAD,EAAgE;AACjE,gBAAU,KADuD;AAEjE,iBAAW;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAFsD,KAAhE,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQME,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIH,KAbD,EAcCF,IAdD,CAcMI,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAhBD,EAiBCG,KAjBD,CAiBOC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACH,KAnBD;AAsBH;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEb,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAsB,KAAKD,KAA/B;;AAEA,QAAI,CAACE,QAAL,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAIK;AACD,0BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,4DAEI;AAAA,oBACKD,KAAK,CAACe,GAAN,CAAUf,KAAK,iBACZ;AAAA,iCACWA,KAAK,CAACgB,IADjB,eAEI;AAAA;AAAA;AAAA;AAAA,oBAFJ,kBAGiBhB,KAAK,CAACiB,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH;AACJ;;AAzD4B;;AA6DjC,eAAerB,QAAf","sourcesContent":["import React from 'react';\r\nimport  { Component } from 'react';\r\nimport { WordList } from \"./WordList\";\r\n\r\nclass PlayGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            words: [],\r\n            isLoaded: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://random-words-with-pronunciation.p.rapidapi.com/word\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\r\n                \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\"\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                words: json,\r\n            })\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        var { isLoaded, words } = this.state;\r\n\r\n        if (!isLoaded) {\r\n            return <div>Loading data from Wordnik API</div>;\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <div className=\"playGame\">\r\n                    All data has been loaded\r\n                    <ul>\r\n                        {words.map(words => (\r\n                            <li>\r\n                                Word: {words.word}\r\n                                <br></br>\r\n                                Definition: {words.definition}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default PlayGame;"]},"metadata":{},"sourceType":"module"}