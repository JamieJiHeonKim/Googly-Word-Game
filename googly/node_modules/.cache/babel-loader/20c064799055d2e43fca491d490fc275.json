{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wendy/Desktop/School/CMPUT-401/Googly-Word-Game/googly/src/Control.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { controlOptions } from './atom';\nexport const Control = ({\n  onClear\n}) => {\n  _s();\n\n  const [controlState, setControlState] = useRecoilState(controlOptions);\n  const {\n    isRunning,\n    speed\n  } = controlState;\n\n  const togglePause = () => {\n    setControlState(oldState => {\n      return { ...oldState,\n        isRunning: !oldState.isRunning\n      };\n    });\n  };\n\n  const onStart = useCallback(() => {\n    setControlState({ ...controlState,\n      isRunning: true\n    });\n  }, [controlState, setControlState]);\n  const onChangeSpeed = useCallback(event => {\n    setControlState({ ...controlState,\n      speed: event.target.value\n    });\n  }, [setControlState, controlState]);\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", () => {\n      setControlState(oldState => {\n        return { ...oldState,\n          isRunning: false\n        };\n      });\n    });\n    return () => document.removeEventListener(\"visibilitychange\");\n  }, [setControlState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control__buttons\",\n      children: [isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePause,\n        children: \"PAUSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStart,\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClear,\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control__speed\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Current speed: ${speed}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"10\",\n        value: speed,\n        onChange: onChangeSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Control, \"loSjPTzgfjlAPHzbAuPn04glY4g=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Control;\nexport default _c2 = /*#__PURE__*/React.memo(Control);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Control\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/wendy/Desktop/School/CMPUT-401/Googly-Word-Game/googly/src/Control.js"],"names":["React","useEffect","useCallback","useRecoilState","controlOptions","Control","onClear","controlState","setControlState","isRunning","speed","togglePause","oldState","onStart","onChangeSpeed","event","target","value","document","addEventListener","removeEventListener","memo"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,WAA1B,QAA4C,OAA5C;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,cAAc,CAACC,cAAD,CAAtD;AACA,QAAM;AAACK,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAqBH,YAA3B;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtBH,IAAAA,eAAe,CAACI,QAAQ,IAAI;AACxB,aAAO,EAAC,GAAGA,QAAJ;AAAcH,QAAAA,SAAS,EAAE,CAACG,QAAQ,CAACH;AAAnC,OAAP;AACH,KAFc,CAAf;AAGH,GAJD;;AAMA,QAAMI,OAAO,GAAGX,WAAW,CAAC,MAAM;AAC9BM,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBE,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAAf;AACH,GAF0B,EAG3B,CACIF,YADJ,EAEIC,eAFJ,CAH2B,CAA3B;AAQA,QAAMM,aAAa,GAAGZ,WAAW,CAAEa,KAAD,IAAW;AACzCP,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkBG,MAAAA,KAAK,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAAtC,KAAD,CAAf;AACH,GAFgC,EAE9B,CAACT,eAAD,EAAkBD,YAAlB,CAF8B,CAAjC;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAChDX,MAAAA,eAAe,CAACI,QAAQ,IAAI;AACxB,eAAO,EAAC,GAAGA,QAAJ;AAAcH,UAAAA,SAAS,EAAE;AAAzB,SAAP;AACH,OAFc,CAAf;AAGH,KAJD;AAKA,WAAO,MAAMS,QAAQ,CAACE,mBAAT,CAA6B,kBAA7B,CAAb;AACH,GAPQ,EAON,CAACZ,eAAD,CAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBAEQC,SAAS,gBAED;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFC,gBAMD;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARhB,eAaI;AAAQ,QAAA,OAAO,EAAEP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA,kBAAK,kBAAiBI,KAAM;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,GAAG,EAAC,GAFR;AAGI,QAAA,GAAG,EAAC,IAHR;AAII,QAAA,KAAK,EAAEA,KAJX;AAKI,QAAA,QAAQ,EAAEI;AALd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA7DM;;GAAMT,O;UAC+BF,c;;;KAD/BE,O;AA+Db,kCAAeL,KAAK,CAACqB,IAAN,CAAWhB,OAAX,CAAf","sourcesContent":["\nimport React, {useEffect, useCallback} from 'react'\nimport { useRecoilState } from 'recoil';\n\nimport { controlOptions } from './atom';\n\nexport const Control = ({ onClear }) => {\n    const [controlState, setControlState] = useRecoilState(controlOptions);\n    const {isRunning, speed} = controlState;\n\n    const togglePause = () => {\n        setControlState(oldState => {\n            return {...oldState, isRunning: !oldState.isRunning};\n        });\n    }\n\n    const onStart = useCallback(() => {\n        setControlState({...controlState, isRunning: true});\n    }, \n    [\n        controlState,\n        setControlState,\n    ]);\n\n    const onChangeSpeed = useCallback((event) => {\n        setControlState({...controlState, speed: event.target.value});\n    }, [setControlState, controlState]);\n\n\n    useEffect(() => {\n        document.addEventListener(\"visibilitychange\", () => {\n            setControlState(oldState => {\n                return {...oldState, isRunning: false};\n            });\n        });\n        return () => document.removeEventListener(\"visibilitychange\");         \n    }, [setControlState, ]);\n\n    return (\n        <div className=\"control\">\n            <div className=\"control__buttons\">\n                {\n                    isRunning ? \n                        (\n                            <button onClick={togglePause}>\n                                PAUSE\n                            </button>\n                        ) : (\n                            <button onClick={onStart}>\n                                START\n                            </button>\n                        )                        \n                }\n                <button onClick={onClear}>CLEAR</button>\n            </div>\n            <div className=\"control__speed\">\n                <p>{`Current speed: ${speed}`}</p>\n                <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"10\"\n                    value={speed}\n                    onChange={onChangeSpeed}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Control);"]},"metadata":{},"sourceType":"module"}