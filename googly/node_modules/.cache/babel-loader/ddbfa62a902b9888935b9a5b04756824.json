{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mashi\\\\Desktop\\\\Jamie\\\\Personal Projects\\\\Googly Word Game\\\\Googly-Word-Game\\\\googly\\\\src\\\\WordList.js\",\n    _s = $RefreshSig$();\n\nimport { Button, DangerButton } from \"./Style\";\nimport React, { useState } from \"react\";\nimport { GamePage } from './GamePage';\nexport const WordList = ({\n  key,\n  value\n}) => {\n  _s();\n\n  const [word, setWord] = useState(\"\");\n  let match = false;\n  let list_word = [{}];\n\n  function checkAnswer(word, answer) {\n    if (word.toLowerCase() === answer.toLowerCase()) {\n      match = true;\n    } else {\n      match = false;\n    }\n\n    return match;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type the words\",\n        value: word,\n        onChange: e => setWord(e.target.value) //checkAnswer(${word}, key)\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      buttonColor: \"orange\",\n      onClick: e => {\n        list_word.push({\n          key,\n          value\n        });\n        console.log(list_word);\n        console.log(key, value);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GamePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WordList, \"KIhUDbJtUcjE+1oNeU7mNfhsQvU=\");\n\n_c = WordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"sources":["C:/Users/mashi/Desktop/Jamie/Personal Projects/Googly Word Game/Googly-Word-Game/googly/src/WordList.js"],"names":["Button","DangerButton","React","useState","GamePage","WordList","key","value","word","setWord","match","list_word","checkAnswer","answer","toLowerCase","e","target","push","console","log"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,YAAjB,QAAqC,SAArC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAD,KAAkB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIO,KAAK,GAAG,KAAZ;AACA,MAAIC,SAAS,GAAG,CAAC,EAAD,CAAhB;;AAEA,WAASC,WAAT,CAAqBJ,IAArB,EAA2BK,MAA3B,EAAmC;AACjC,QAAIL,IAAI,CAACM,WAAL,OAAuBD,MAAM,CAACC,WAAP,EAA3B,EAAiD;AAC7CJ,MAAAA,KAAK,GAAG,IAAR;AACH,KAFD,MAGK;AACDA,MAAAA,KAAK,GAAG,KAAR;AACH;;AACD,WAAOA,KAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,6BACE;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,KAAK,EAAEF,IAHX;AAII,QAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACC,MAAF,CAAST,KAAV,CAJ5B,CAKI;;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,MAAD;AACE,MAAA,WAAW,EAAC,QADd;AAEE,MAAA,OAAO,EAAGQ,CAAD,IAAO;AACZJ,QAAAA,SAAS,CAACM,IAAV,CAAe;AAACX,UAAAA,GAAD;AAAMC,UAAAA;AAAN,SAAf;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ,EAAgBC,KAAhB;AACH,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAoBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;AAwBD,CAvCM;;GAAMF,Q;;KAAAA,Q","sourcesContent":["import { Button, DangerButton } from \"./Style\";\r\nimport React, { useState } from \"react\";\r\nimport { GamePage } from './GamePage';\r\n\r\nexport const WordList = ({key, value}) => {\r\n  const [word, setWord] = useState(\"\");\r\n  let match = false;\r\n  let list_word = [{}];\r\n\r\n  function checkAnswer(word, answer) {\r\n    if (word.toLowerCase() === answer.toLowerCase()) {\r\n        match = true;    \r\n    }\r\n    else {\r\n        match = false;\r\n    }\r\n    return match;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Type the words\"\r\n            value={word}\r\n            onChange={(e) => setWord(e.target.value)}\r\n            //checkAnswer(${word}, key)\r\n        />\r\n      </div>\r\n      <Button\r\n        buttonColor=\"orange\"\r\n        onClick={(e) => {\r\n            list_word.push({key, value});\r\n            console.log(list_word);\r\n            console.log(key,value)            \r\n        }}\r\n      >\r\n        Submit\r\n      </Button>\r\n      <GamePage />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}