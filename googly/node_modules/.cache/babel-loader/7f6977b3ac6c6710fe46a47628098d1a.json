{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jon\\\\Documents\\\\GitHub\\\\Googly-Word-Game\\\\googly\\\\src\\\\ScorePage.js\";\nimport { Button, DangerButton } from \"./Style\";\nimport React, { useState } from \"react\";\n\nclass ScorePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = ({\n      curValue,\n      newValue\n    }) => {\n      this.setState({\n        curValue: newValue !== 100 ? newValue : 99\n      });\n    };\n\n    this.handleValueChange = (newValue, isField) => {\n      const {\n        props: {\n          id,\n          onChange\n        },\n        state: {\n          curValue\n        }\n      } = this;\n      newValue = parseInt(newValue, 10);\n\n      if (!newValue) {\n        if (isField) {\n          newValue = '';\n        } else {\n          newValue = 1;\n        }\n      }\n\n      if (newValue < 0) {\n        newValue = 1;\n      }\n\n      if (!isField) {\n        this.inputRef.current.style.transform = newValue > curValue ? 'translateY(-100%)' : 'translateY(100%)';\n        this.inputRef.current.style.opacity = 0;\n        setTimeout(() => {\n          this.inputRef.current.style.transitionDuration = '0s';\n          this.inputRef.current.style.transform = newValue > curValue ? 'translateY(100%)' : 'translateY(-100%)';\n          this.inputRef.current.style.opacity = 0;\n          this.changeValue({\n            curValue,\n            newValue\n          });\n          setTimeout(() => {\n            this.inputRef.current.style.transitionDuration = '0.3s';\n            this.inputRef.current.style.transform = 'translateY(0)';\n            this.inputRef.current.style.opacity = 1;\n          }, 20);\n        }, 250);\n      } else {\n        this.changeValue({\n          curValue,\n          newValue\n        });\n      }\n    };\n\n    this.inputRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      curValue: 1\n    };\n  }\n\n  render() {\n    const {\n      state: {\n        curValue\n      }\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...{\n        className: 'counter'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", { ...{\n          className: 'button',\n          onClick: () => {\n            this.handleValueChange(curValue - 1);\n          },\n          title: '-1'\n        },\n        children: \"\\u2212\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", { ...{\n          className: 'input-wrapper'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", { ...{\n            className: 'input',\n            maxlength: 2,\n            onChange: e => {\n              e.preventDefault();\n              this.handleValueChange(e.target.value, true);\n            },\n            ref: this.inputRef,\n            type: 'text',\n            value: curValue\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", { ...{\n          className: 'button',\n          onClick: () => {\n            this.handleValueChange(curValue + 1);\n          },\n          title: '+1'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ScorePage, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 103,\n  columnNumber: 17\n}, this), document.getElementById('app'));\nexport default ScorePage;","map":{"version":3,"sources":["C:/Users/Jon/Documents/GitHub/Googly-Word-Game/googly/src/ScorePage.js"],"names":["Button","DangerButton","React","useState","ScorePage","Component","constructor","props","changeValue","curValue","newValue","setState","handleValueChange","isField","id","onChange","state","parseInt","inputRef","current","style","transform","opacity","setTimeout","transitionDuration","createRef","render","className","onClick","title","maxlength","e","preventDefault","target","value","ref","type","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import { Button, DangerButton } from \"./Style\";\r\nimport React, { useState } from \"react\";\r\n\r\nclass ScorePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputRef = React.createRef()\r\n    this.state = { curValue: 1 }\r\n  }\r\n  \r\n  changeValue = ({curValue, newValue}) => {\r\n    this.setState({ curValue: newValue !== 100 ? newValue : 99 })\r\n  }\r\n  \r\n  handleValueChange = (newValue, isField) => {\r\n    const {\r\n      props: { id, onChange },\r\n      state: {\r\n        curValue\r\n      }\r\n    } = this\r\n\r\n    newValue = parseInt(newValue, 10)\r\n\r\n    if (!newValue) {\r\n      if (isField) {\r\n        newValue = ''\r\n      } else {\r\n        newValue = 1\r\n      }\r\n    }\r\n    if (newValue < 0) {\r\n      newValue = 1\r\n    }\r\n    if (!isField) {      \r\n      this.inputRef.current.style.transform = newValue > curValue ? 'translateY(-100%)' : 'translateY(100%)'\r\n      this.inputRef.current.style.opacity = 0\r\n       \r\n    setTimeout(() => {\r\n        this.inputRef.current.style.transitionDuration = '0s'\r\n        this.inputRef.current.style.transform = newValue > curValue ? 'translateY(100%)' : 'translateY(-100%)'\r\n        this.inputRef.current.style.opacity = 0\r\n        this.changeValue({ curValue, newValue })\r\n        \r\n        setTimeout(() => {\r\n          this.inputRef.current.style.transitionDuration = '0.3s'\r\n          this.inputRef.current.style.transform = 'translateY(0)'\r\n          this.inputRef.current.style.opacity = 1\r\n        }, 20)\r\n      }, 250)\r\n    } else {\r\n      this.changeValue({ curValue, newValue })\r\n    }    \r\n  }\r\n\r\n  render () {\r\n    const {\r\n      state: {\r\n        curValue\r\n      }\r\n    } = this\r\n    \r\n    return (\r\n      <div {...{ className: 'counter' }}>\r\n        <button\r\n          {...{\r\n            className: 'button',\r\n            onClick: () => { this.handleValueChange(curValue - 1) },\r\n            title: '-1'\r\n          }}\r\n        >\r\n          âˆ’\r\n        </button>\r\n        <div {...{ className: 'input-wrapper' }}>\r\n          <input\r\n          {...{\r\n            className: 'input',\r\n            maxlength: 2,\r\n            onChange: e => {\r\n              e.preventDefault()\r\n              this.handleValueChange(e.target.value, true)\r\n            },\r\n            ref: this.inputRef,\r\n            type: 'text',\r\n            value: curValue\r\n          }} \r\n        />\r\n        </div>\r\n        <button\r\n          {...{\r\n            className: 'button',\r\n            onClick: () => { this.handleValueChange(curValue + 1) },\r\n            title: '+1'\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(<ScorePage />, document.getElementById('app'));\r\n\r\nexport default ScorePage;"]},"metadata":{},"sourceType":"module"}