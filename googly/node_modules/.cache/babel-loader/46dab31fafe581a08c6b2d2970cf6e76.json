{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\GitHub\\\\Googly-Word-Game\\\\googly\\\\src\\\\Control.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { Button } from \"./Style\";\nimport { controlOptions } from \"./Atom\";\nexport const Control = ({\n  onClear\n}) => {\n  _s();\n\n  const [controlState, setControlState] = useRecoilState(controlOptions);\n  const {\n    isRunning,\n    speed\n  } = controlState;\n\n  const togglePause = () => {\n    setControlState(oldState => {\n      return { ...oldState,\n        isRunning: !oldState.isRunning\n      };\n    });\n  };\n\n  const onStart = useCallback(() => {\n    setControlState({ ...controlState,\n      isRunning: true\n    });\n  }, [controlState, setControlState]);\n  const onChangeSpeed = useCallback(event => {\n    setControlState({ ...controlState,\n      speed: event.target.value\n    });\n  }, [setControlState, controlState]);\n  useEffect(() => {\n    document.addEventListener(\"visibilitychange\", () => {\n      setControlState(oldState => {\n        return { ...oldState,\n          isRunning: false\n        };\n      });\n    });\n    return () => document.removeEventListener(\"visibilitychange\");\n  }, [setControlState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control__buttons\",\n      style: {\n        display: \"flex\",\n        float: \"right\"\n      },\n      children: [isRunning ? /*#__PURE__*/_jsxDEV(Button, {\n        buttonColor: \"orange\",\n        onClick: togglePause,\n        style: {\n          marginRight: \"auto\"\n        },\n        children: \"PAUSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        buttonColor: \"blue\",\n        onClick: onStart,\n        style: {\n          marginRight: \"auto\"\n        },\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonColor: \"red\",\n        onClick: onClear,\n        style: {\n          marginRight: \"auto\"\n        },\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control__speed\",\n      style: {\n        display: \"flex\",\n        float: \"right\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        style: {\n          color: \"DodgerBlue\"\n        },\n        children: `Speed: ${speed}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"10\",\n        value: speed,\n        onChange: onChangeSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Control, \"loSjPTzgfjlAPHzbAuPn04glY4g=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Control;\nexport default _c2 = /*#__PURE__*/React.memo(Control);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Control\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Owner/Documents/GitHub/Googly-Word-Game/googly/src/Control.js"],"names":["React","useEffect","useCallback","useRecoilState","Button","controlOptions","Control","onClear","controlState","setControlState","isRunning","speed","togglePause","oldState","onStart","onChangeSpeed","event","target","value","document","addEventListener","removeEventListener","display","float","marginRight","color","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Button } from \"./Style\";\r\n\r\nimport { controlOptions } from \"./Atom\";\r\n\r\nexport const Control = ({ onClear }) => {\r\n  const [controlState, setControlState] = useRecoilState(controlOptions);\r\n  const { isRunning, speed } = controlState;\r\n\r\n  const togglePause = () => {\r\n    setControlState((oldState) => {\r\n      return { ...oldState, isRunning: !oldState.isRunning };\r\n    });\r\n  };\r\n\r\n  const onStart = useCallback(() => {\r\n    setControlState({ ...controlState, isRunning: true });\r\n  }, [controlState, setControlState]);\r\n\r\n  const onChangeSpeed = useCallback(\r\n    (event) => {\r\n      setControlState({ ...controlState, speed: event.target.value });\r\n    },\r\n    [setControlState, controlState]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"visibilitychange\", () => {\r\n      setControlState((oldState) => {\r\n        return { ...oldState, isRunning: false };\r\n      });\r\n    });\r\n    return () => document.removeEventListener(\"visibilitychange\");\r\n  }, [setControlState]);\r\n\r\n  return (\r\n    <div className=\"control\">\r\n      <div\r\n        className=\"control__buttons\"\r\n        style={{ display: \"flex\", float: \"right\" }}\r\n      >\r\n        {isRunning ? (\r\n          <Button\r\n            buttonColor=\"orange\"\r\n            onClick={togglePause}\r\n            style={{ marginRight: \"auto\" }}\r\n          >\r\n            PAUSE\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            buttonColor=\"blue\"\r\n            onClick={onStart}\r\n            style={{ marginRight: \"auto\" }}\r\n          >\r\n            START\r\n          </Button>\r\n        )}\r\n        <Button\r\n          buttonColor=\"red\"\r\n          onClick={onClear}\r\n          style={{ marginRight: \"auto\" }}\r\n        >\r\n          CLEAR\r\n        </Button>\r\n      </div>\r\n      <div\r\n        className=\"control__speed\"\r\n        style={{ display: \"flex\", float: \"right\" }}\r\n      >\r\n        <h5 style={{ color: \"DodgerBlue\" }}>{`Speed: ${speed}`}</h5>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          value={speed}\r\n          onChange={onChangeSpeed}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Control);\r\n"]},"metadata":{},"sourceType":"module"}