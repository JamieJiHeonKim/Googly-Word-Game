{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nexport const LoadData = children => {\n  _s();\n\n  const [word, setWord] = useState({\n    word: {}\n  });\n  useEffect(() => {\n    const fetchWord = async () => {\n      const response = await fetch(\"https://random-words-with-pronunciation.p.rapidapi.com/word\", {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\n          \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\"\n        }\n      });\n      const data = await response.json();\n      setWord(data.results[0]);\n      console.log(word);\n    };\n\n    fetchWord();\n  }, []);\n  return null; //   return React.Children.map(children, (child) =>\n  //     React.cloneElement(child, { word })\n  //   );\n};\n\n_s(LoadData, \"qgXu0TiVOF+kQBoT+5DRpLDaHb4=\");\n\n_c = LoadData;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadData\");","map":{"version":3,"sources":["C:/Users/Jon/Documents/GitHub/Googly-Word-Game/googly/src/LoadData.js"],"names":["React","useState","useEffect","LoadData","children","word","setWord","fetchWord","response","fetch","method","headers","data","json","results","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6DAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,4BACE,oDAFK;AAGP,6BAAmB;AAHZ;AAFX,OAF0B,CAA5B;AAWA,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,MAAAA,OAAO,CAACM,IAAI,CAACE,OAAL,CAAa,CAAb,CAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD,KAfD;;AAgBAE,IAAAA,SAAS;AACV,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,SAAO,IAAP,CArBoC,CAsBpC;AACA;AACA;AACD,CAzBM;;GAAMJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nexport const LoadData = (children) => {\r\n  const [word, setWord] = useState({ word: {} });\r\n  useEffect(() => {\r\n    const fetchWord = async () => {\r\n      const response = await fetch(\r\n        \"https://random-words-with-pronunciation.p.rapidapi.com/word\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-key\":\r\n              \"da94142ddemsh6346e32e7451b8bp19aa62jsn6480d070945c\",\r\n            \"x-rapidapi-host\": \"random-words-with-pronunciation.p.rapidapi.com\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setWord(data.results[0]);\r\n      console.log(word);\r\n    };\r\n    fetchWord();\r\n  }, []);\r\n  return null;\r\n  //   return React.Children.map(children, (child) =>\r\n  //     React.cloneElement(child, { word })\r\n  //   );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}