{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\GitHub\\\\Googly-Word-Game\\\\googly\\\\src\\\\WordList.js\",\n    _s = $RefreshSig$();\n\nimport { Button, DangerButton } from \"./Style\";\nimport React, { useState } from \"react\";\nexport const WordList = ({\n  key,\n  value\n}) => {\n  _s();\n\n  const [word, setWord] = useState(\"\"); // let match = false;\n\n  let list_word = [{}]; // function checkAnswer(word, answer) {\n  //   if (word.toLowerCase() === answer.toLowerCase()) {\n  //     match = true;\n  //   } else {\n  //     match = false;\n  //   }\n  //   return match;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type the words\",\n        value: word,\n        onChange: e => setWord(e.target.value) //checkAnswer(${word}, key)\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      buttonColor: \"orange\",\n      onClick: e => {\n        list_word.push({\n          key,\n          value\n        });\n        console.log(list_word);\n        console.log(key, value);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WordList, \"KIhUDbJtUcjE+1oNeU7mNfhsQvU=\");\n\n_c = WordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"sources":["C:/Users/Owner/Documents/GitHub/Googly-Word-Game/googly/src/WordList.js"],"names":["Button","DangerButton","React","useState","WordList","key","value","word","setWord","list_word","e","target","push","console","log"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,YAAjB,QAAqC,SAArC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAoB;AAAA;;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAD0C,CAE1C;;AACA,MAAIM,SAAS,GAAG,CAAC,EAAD,CAAhB,CAH0C,CAK1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,KAAK,EAAEF,IAHT;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASL,KAAV,CAJ1B,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,MAAD;AACE,MAAA,WAAW,EAAC,QADd;AAEE,MAAA,OAAO,EAAGI,CAAD,IAAO;AACdD,QAAAA,SAAS,CAACG,IAAV,CAAe;AAAEP,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAf;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ,EAAiBC,KAAjB;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAuBD,CArCM;;GAAMF,Q;;KAAAA,Q","sourcesContent":["import { Button, DangerButton } from \"./Style\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const WordList = ({ key, value }) => {\r\n  const [word, setWord] = useState(\"\");\r\n  // let match = false;\r\n  let list_word = [{}];\r\n\r\n  // function checkAnswer(word, answer) {\r\n  //   if (word.toLowerCase() === answer.toLowerCase()) {\r\n  //     match = true;\r\n  //   } else {\r\n  //     match = false;\r\n  //   }\r\n  //   return match;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type the words\"\r\n          value={word}\r\n          onChange={(e) => setWord(e.target.value)}\r\n          //checkAnswer(${word}, key)\r\n        />\r\n      </div>\r\n      <Button\r\n        buttonColor=\"orange\"\r\n        onClick={(e) => {\r\n          list_word.push({ key, value });\r\n          console.log(list_word);\r\n          console.log(key, value);\r\n        }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}